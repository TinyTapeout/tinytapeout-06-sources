//------> ./rtl.v 
// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2023.1_2/1049935 Production Release
//  HLS Date:       Sat Jun 10 10:53:51 PDT 2023
// 
//  Generated by:   lc4976@hansolo.poly.edu
//  Generated date: Tue Apr  2 10:49:17 2024
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    excursions_core
// ------------------------------------------------------------------


module excursions_core (
  clk, rst_n, valid_rsc_dat, valid_triosy_lz, is_random_rsc_dat, is_random_triosy_lz,
      epsilon_rsc_dat, epsilon_triosy_lz
);
  input clk;
  input rst_n;
  output valid_rsc_dat;
  output valid_triosy_lz;
  output is_random_rsc_dat;
  output is_random_triosy_lz;
  input epsilon_rsc_dat;
  output epsilon_triosy_lz;


  // Interconnect Declarations
  reg valid_rsci_idat;
  reg is_random_rsci_idat;
  wire epsilon_rsci_idat;
  reg epsilon_triosy_obj_ld;
  wire [5:0] ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qif_acc_tmp;
  wire [6:0] nl_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qif_acc_tmp;
  wire or_dcpl_32;
  wire or_dcpl_34;
  wire or_dcpl_37;
  wire and_dcpl_100;
  wire or_dcpl_93;
  wire or_dcpl_94;
  wire not_tmp_85;
  wire or_dcpl_95;
  wire or_dcpl_96;
  wire or_dcpl_98;
  wire or_dcpl_99;
  wire or_dcpl_101;
  wire or_dcpl_102;
  wire or_dcpl_105;
  wire or_dcpl_108;
  wire or_dcpl_109;
  wire or_dcpl_112;
  wire or_dcpl_115;
  wire or_dcpl_116;
  wire or_dcpl_119;
  wire or_dcpl_123;
  wire ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_or_cse_1;
  wire [19:0] states_9_sva_dfm_1_mx0;
  reg [15:0] S_sva;
  wire [16:0] nl_S_sva;
  reg [19:0] asn_39_itm_1;
  reg reg_valid_triosy_obj_ld_cse;
  reg [19:0] reg_count_cse;
  wire [20:0] nl_reg_count_cse;
  wire and_131_cse;
  wire or_18_cse;
  wire [33:0] operator_34_10_false_AC_TRN_AC_WRAP_lshift_itm;
  wire [18:0] operator_20_0_false_AC_TRN_AC_WRAP_lshift_itm;
  reg [19:0] states_9_sva;
  reg [19:0] states_8_sva;
  reg [19:0] states_10_sva;
  reg [19:0] states_7_sva;
  reg [19:0] states_11_sva;
  reg [19:0] states_6_sva;
  reg [19:0] states_12_sva;
  reg [19:0] states_5_sva;
  reg [19:0] states_13_sva;
  reg [19:0] states_4_sva;
  reg [19:0] states_14_sva;
  reg [19:0] states_3_sva;
  reg [19:0] states_15_sva;
  reg [19:0] states_2_sva;
  reg [19:0] states_16_sva;
  reg [19:0] states_1_sva;
  reg [19:0] states_17_sva;
  reg [19:0] states_0_sva;
  reg [19:0] states_18_sva;
  reg F0_000000_1_dfmergedata_1_lpi_1_dfm_15;
  reg if_1_for_lor_1_lpi_1_dfm;
  reg [19:0] states_0_sva_dfm_1;
  reg [19:0] states_1_sva_dfm_1;
  reg [19:0] states_2_sva_dfm_1;
  reg [19:0] states_3_sva_dfm_1;
  reg [19:0] states_4_sva_dfm_1;
  reg [19:0] states_5_sva_dfm_1;
  reg [19:0] states_6_sva_dfm_1;
  reg [19:0] states_7_sva_dfm_1;
  reg [19:0] states_8_sva_dfm_1;
  reg [19:0] states_9_sva_dfm_1;
  reg [19:0] states_10_sva_dfm_1;
  reg [19:0] states_11_sva_dfm_1;
  reg [19:0] states_12_sva_dfm_1;
  reg [19:0] states_13_sva_dfm_1;
  reg [19:0] states_14_sva_dfm_1;
  reg [19:0] states_15_sva_dfm_1;
  reg [19:0] states_16_sva_dfm_1;
  reg [19:0] states_17_sva_dfm_1;
  reg [19:0] states_18_sva_dfm_1;
  reg unequal_tmp_1;
  reg [12:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_mux_1_itm_1;
  reg [10:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_mux_2_itm_1;
  reg ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_and_itm_1;
  reg [4:0] ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_slc_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qr_5_0_5_1_itm_1;
  wire if_1_for_lor_1_lpi_1_dfm_mx0w0;
  wire F0_000000_1_dfmergedata_1_lpi_1_dfm_15_mx0w0;
  wire [19:0] states_0_sva_dfm_1_mx0;
  wire [19:0] states_10_sva_dfm_1_mx0;
  wire [19:0] states_1_sva_dfm_1_mx0;
  wire [19:0] states_11_sva_dfm_1_mx0;
  wire [19:0] states_2_sva_dfm_1_mx0;
  wire [19:0] states_12_sva_dfm_1_mx0;
  wire [19:0] states_3_sva_dfm_1_mx0;
  wire [19:0] states_13_sva_dfm_1_mx0;
  wire [19:0] states_4_sva_dfm_1_mx0;
  wire [19:0] states_14_sva_dfm_1_mx0;
  wire [19:0] states_5_sva_dfm_1_mx0;
  wire [19:0] states_15_sva_dfm_1_mx0;
  wire [19:0] states_6_sva_dfm_1_mx0;
  wire [19:0] states_16_sva_dfm_1_mx0;
  wire [19:0] states_7_sva_dfm_1_mx0;
  wire [19:0] states_17_sva_dfm_1_mx0;
  wire [19:0] states_8_sva_dfm_1_mx0;
  wire [19:0] states_18_sva_dfm_1_mx0;
  wire [19:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1;
  wire [25:0] if_1_for_acc_18_sdt_1;
  wire [26:0] nl_if_1_for_acc_18_sdt_1;
  wire [19:0] if_if_acc_1_ctmp_sva_1;
  wire [20:0] nl_if_if_acc_1_ctmp_sva_1;
  wire [5:0] ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qr_5_0_lpi_1_dfm_1;
  wire [24:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_sva_1;
  wire [25:0] nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_sva_1;
  wire [12:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1;
  wire [13:0] nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1;
  wire [19:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mul_psp_sva_1;
  wire [4:0] leading_sign_20_0_f14c4ed6431fe22f800966f133448fe52396_1;
  wire nand_69_cse;
  wire [20:0] if_1_for_acc_23_itm_25_5_1;
  wire [18:0] if_1_for_acc_27_itm_24_6_1;
  wire [9:0] if_1_for_acc_itm_25_16_1;
  wire [9:0] if_1_for_acc_42_itm_18_9_1;
  wire [9:0] if_1_for_acc_43_itm_16_7_1;
  wire [9:0] if_1_for_acc_47_itm_20_11_1;
  wire [9:0] if_1_for_acc_51_itm_23_14_1;
  wire [9:0] if_1_for_acc_54_itm_17_8_1;
  wire [9:0] if_1_for_acc_58_itm_19_10_1;
  wire [9:0] if_1_for_acc_61_itm_18_9_1;
  wire [9:0] if_1_for_acc_64_itm_19_10_1;
  wire operator_16_true_acc_itm_16;

  wire if_1_for_if_mux_nl;
  wire if_1_for_oelse_1_mux_nl;
  wire[21:0] if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[22:0] nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl;
  wire[21:0] if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[22:0] nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl_1;
  wire[21:0] if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[22:0] nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[21:0] if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[22:0] nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[21:0] if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[22:0] nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[21:0] if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[22:0] nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[21:0] if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[22:0] nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl;
  wire[21:0] if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[22:0] nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl_1;
  wire[21:0] if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[22:0] nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl;
  wire[21:0] if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[22:0] nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl_1;
  wire[21:0] if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[22:0] nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl;
  wire[21:0] if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[22:0] nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl_1;
  wire[21:0] if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[22:0] nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl;
  wire[21:0] if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[22:0] nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl_1;
  wire[21:0] if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[22:0] nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl;
  wire[21:0] if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[22:0] nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl_1;
  wire[21:0] if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[22:0] nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl;
  wire[21:0] if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[22:0] nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl_1;
  wire[21:0] if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[22:0] nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl;
  wire[21:0] if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[22:0] nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl_1;
  wire[21:0] if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[22:0] nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl;
  wire[21:0] if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[22:0] nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl_1;
  wire[21:0] if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[22:0] nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl;
  wire[21:0] if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[22:0] nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl_1;
  wire[21:0] if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[22:0] nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl;
  wire[21:0] if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[22:0] nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl_1;
  wire[21:0] if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[22:0] nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl;
  wire[21:0] if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[22:0] nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl_1;
  wire[21:0] if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[22:0] nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl;
  wire[21:0] if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[22:0] nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl_1;
  wire[21:0] if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[22:0] nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl;
  wire[21:0] if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[22:0] nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl_1;
  wire[21:0] if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[22:0] nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl;
  wire[21:0] if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[22:0] nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl_1;
  wire[21:0] if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[22:0] nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl;
  wire[21:0] if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[22:0] nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1;
  wire[20:0] operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl_1;
  wire[21:0] nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl_1;
  wire or_98_nl;
  wire or_101_nl;
  wire or_104_nl;
  wire or_105_nl;
  wire or_107_nl;
  wire or_108_nl;
  wire or_111_nl;
  wire or_112_nl;
  wire or_114_nl;
  wire or_115_nl;
  wire[25:0] if_1_for_acc_23_nl;
  wire[26:0] nl_if_1_for_acc_23_nl;
  wire[23:0] if_1_for_acc_65_nl;
  wire[24:0] nl_if_1_for_acc_65_nl;
  wire or_118_nl;
  wire or_119_nl;
  wire or_121_nl;
  wire or_122_nl;
  wire or_125_nl;
  wire or_126_nl;
  wire or_127_nl;
  wire or_128_nl;
  wire or_129_nl;
  wire[24:0] if_1_for_acc_27_nl;
  wire[25:0] nl_if_1_for_acc_27_nl;
  wire[21:0] if_1_for_acc_26_nl;
  wire[22:0] nl_if_1_for_acc_26_nl;
  wire[21:0] if_1_for_acc_17_nl;
  wire[22:0] nl_if_1_for_acc_17_nl;
  wire[19:0] if_mux_nl;
  wire[23:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_slc_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_000000;
  wire[24:0] nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_slc_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_000000;
  wire[24:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_8_nl;
  wire[25:0] nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_8_nl;
  wire[26:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_3_nl;
  wire[27:0] nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_3_nl;
  wire[25:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_2_nl;
  wire[26:0] nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_2_nl;
  wire[23:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_1_nl;
  wire[24:0] nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_1_nl;
  wire[9:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mux_1_nl;
  wire[5:0] ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mux_nl;
  wire[25:0] if_1_for_acc_nl;
  wire[26:0] nl_if_1_for_acc_nl;
  wire[25:0] if_1_for_acc_11_nl;
  wire[26:0] nl_if_1_for_acc_11_nl;
  wire[24:0] if_1_for_acc_10_nl;
  wire[26:0] nl_if_1_for_acc_10_nl;
  wire[18:0] if_1_for_acc_42_nl;
  wire[19:0] nl_if_1_for_acc_42_nl;
  wire[18:0] if_1_for_acc_68_nl;
  wire[19:0] nl_if_1_for_acc_68_nl;
  wire[26:0] if_1_for_acc_13_nl;
  wire[27:0] nl_if_1_for_acc_13_nl;
  wire[23:0] if_1_for_acc_12_nl;
  wire[24:0] nl_if_1_for_acc_12_nl;
  wire[16:0] if_1_for_acc_43_nl;
  wire[17:0] nl_if_1_for_acc_43_nl;
  wire[23:0] if_1_for_acc_16_nl;
  wire[25:0] nl_if_1_for_acc_16_nl;
  wire[20:0] if_1_for_acc_47_nl;
  wire[21:0] nl_if_1_for_acc_47_nl;
  wire[16:0] if_1_for_acc_77_nl;
  wire[17:0] nl_if_1_for_acc_77_nl;
  wire[27:0] if_1_for_acc_21_nl;
  wire[28:0] nl_if_1_for_acc_21_nl;
  wire[20:0] if_1_for_acc_44_nl;
  wire[21:0] nl_if_1_for_acc_44_nl;
  wire[23:0] if_1_for_acc_51_nl;
  wire[24:0] nl_if_1_for_acc_51_nl;
  wire[19:0] if_1_for_acc_78_nl;
  wire[20:0] nl_if_1_for_acc_78_nl;
  wire[17:0] if_1_for_acc_79_nl;
  wire[18:0] nl_if_1_for_acc_79_nl;
  wire[17:0] if_1_for_acc_54_nl;
  wire[18:0] nl_if_1_for_acc_54_nl;
  wire[17:0] if_1_for_acc_72_nl;
  wire[18:0] nl_if_1_for_acc_72_nl;
  wire[20:0] if_1_for_acc_66_nl;
  wire[21:0] nl_if_1_for_acc_66_nl;
  wire[19:0] if_1_for_acc_58_nl;
  wire[21:0] nl_if_1_for_acc_58_nl;
  wire[19:0] if_1_for_acc_73_nl;
  wire[20:0] nl_if_1_for_acc_73_nl;
  wire[24:0] if_1_for_acc_31_nl;
  wire[26:0] nl_if_1_for_acc_31_nl;
  wire[18:0] if_1_for_acc_61_nl;
  wire[19:0] nl_if_1_for_acc_61_nl;
  wire[18:0] if_1_for_acc_75_nl;
  wire[19:0] nl_if_1_for_acc_75_nl;
  wire[22:0] if_1_for_acc_67_nl;
  wire[23:0] nl_if_1_for_acc_67_nl;
  wire[24:0] if_1_for_acc_34_nl;
  wire[25:0] nl_if_1_for_acc_34_nl;
  wire[19:0] if_1_for_acc_64_nl;
  wire[20:0] nl_if_1_for_acc_64_nl;
  wire[19:0] if_1_for_acc_76_nl;
  wire[20:0] nl_if_1_for_acc_76_nl;
  wire[16:0] operator_16_true_acc_nl;
  wire[17:0] nl_operator_16_true_acc_nl;

  // Interconnect Declarations for Component Instantiations 
  wire [24:0] nl_operator_34_10_false_AC_TRN_AC_WRAP_lshift_rg_a;
  assign nl_operator_34_10_false_AC_TRN_AC_WRAP_lshift_rg_a = {ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_mux_1_itm_1
      , ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_mux_2_itm_1
      , ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_and_itm_1};
  wire [18:0] nl_operator_20_0_false_AC_TRN_AC_WRAP_lshift_rg_a;
  assign nl_operator_20_0_false_AC_TRN_AC_WRAP_lshift_rg_a = states_9_sva_dfm_1_mx0[18:0];
  ccs_out_v1 #(.rscid(32'sd1),
  .width(32'sd1)) valid_rsci (
      .idat(valid_rsci_idat),
      .dat(valid_rsc_dat)
    );
  ccs_out_v1 #(.rscid(32'sd2),
  .width(32'sd1)) is_random_rsci (
      .idat(is_random_rsci_idat),
      .dat(is_random_rsc_dat)
    );
  ccs_in_v1 #(.rscid(32'sd3),
  .width(32'sd1)) epsilon_rsci (
      .dat(epsilon_rsc_dat),
      .idat(epsilon_rsci_idat)
    );
  mgc_io_sync_v2 #(.valid(32'sd0)) valid_triosy_obj (
      .ld(reg_valid_triosy_obj_ld_cse),
      .lz(valid_triosy_lz)
    );
  mgc_io_sync_v2 #(.valid(32'sd0)) is_random_triosy_obj (
      .ld(reg_valid_triosy_obj_ld_cse),
      .lz(is_random_triosy_lz)
    );
  mgc_io_sync_v2 #(.valid(32'sd0)) epsilon_triosy_obj (
      .ld(epsilon_triosy_obj_ld),
      .lz(epsilon_triosy_lz)
    );
  mgc_shift_bl_v5 #(.width_a(32'sd25),
  .signd_a(32'sd0),
  .width_s(32'sd5),
  .width_z(32'sd34)) operator_34_10_false_AC_TRN_AC_WRAP_lshift_rg (
      .a(nl_operator_34_10_false_AC_TRN_AC_WRAP_lshift_rg_a[24:0]),
      .s(ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_slc_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qr_5_0_5_1_itm_1),
      .z(operator_34_10_false_AC_TRN_AC_WRAP_lshift_itm)
    );
  leading_sign_20_0  leading_sign_20_0_rg (
      .mantissa(states_9_sva_dfm_1_mx0),
      .rtn(leading_sign_20_0_f14c4ed6431fe22f800966f133448fe52396_1)
    );
  mgc_shift_l_v5 #(.width_a(32'sd19),
  .signd_a(32'sd0),
  .width_s(32'sd5),
  .width_z(32'sd19)) operator_20_0_false_AC_TRN_AC_WRAP_lshift_rg (
      .a(nl_operator_20_0_false_AC_TRN_AC_WRAP_lshift_rg_a[18:0]),
      .s(leading_sign_20_0_f14c4ed6431fe22f800966f133448fe52396_1),
      .z(operator_20_0_false_AC_TRN_AC_WRAP_lshift_itm)
    );
  assign or_18_cse = (reg_count_cse!=20'b11111111111111111111);
  assign and_131_cse = (reg_count_cse==20'b11111111111111111111);
  assign nand_69_cse = ~((reg_count_cse==20'b11111111111111111111));
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_18_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl[20:0];
  assign nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_64_itm_19_10_1});
  assign if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl_1 = conv_u2u_20_21(states_18_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl_1[20:0];
  assign nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 =
      conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_8_nl_1) +
      conv_s2u_21_22({11'b10000000000 , if_1_for_acc_64_itm_19_10_1});
  assign if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1[21:0];
  assign if_1_for_lor_1_lpi_1_dfm_mx0w0 = (readslicef_22_1_21(if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl))
      | (readslicef_22_1_21(if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1));
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_0_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl[20:0];
  assign nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_itm_25_16_1});
  assign if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = conv_u2u_20_21(states_0_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1[20:0];
  assign nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_itm_25_16_1});
  assign if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_10_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl[20:0];
  assign nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_itm_25_16_1});
  assign if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = conv_u2u_20_21(states_10_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1[20:0];
  assign nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 =
      conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1) + conv_s2u_21_22({11'b10000000000
      , if_1_for_acc_itm_25_16_1});
  assign if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = nl_if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_1_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl[20:0];
  assign nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_42_itm_18_9_1});
  assign if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl_1 = conv_u2u_20_21(states_1_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl_1[20:0];
  assign nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_1_nl_1)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_42_itm_18_9_1});
  assign if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_11_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl[20:0];
  assign nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_42_itm_18_9_1});
  assign if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl_1 = conv_u2u_20_21(states_11_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl_1[20:0];
  assign nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 =
      conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_1_nl_1) +
      conv_s2u_21_22({11'b10000000000 , if_1_for_acc_42_itm_18_9_1});
  assign if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = nl_if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_2_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl[20:0];
  assign nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_43_itm_16_7_1});
  assign if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl_1 = conv_u2u_20_21(states_2_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl_1[20:0];
  assign nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_2_nl_1)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_43_itm_16_7_1});
  assign if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_12_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl[20:0];
  assign nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_43_itm_16_7_1});
  assign if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl_1 = conv_u2u_20_21(states_12_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl_1[20:0];
  assign nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 =
      conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_2_nl_1) +
      conv_s2u_21_22({11'b10000000000 , if_1_for_acc_43_itm_16_7_1});
  assign if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = nl_if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_3_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl[20:0];
  assign nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_47_itm_20_11_1});
  assign if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl_1 = conv_u2u_20_21(states_3_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl_1[20:0];
  assign nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_3_nl_1)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_47_itm_20_11_1});
  assign if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_13_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl[20:0];
  assign nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_47_itm_20_11_1});
  assign if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl_1 = conv_u2u_20_21(states_13_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl_1[20:0];
  assign nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 =
      conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_3_nl_1) +
      conv_s2u_21_22({11'b10000000000 , if_1_for_acc_47_itm_20_11_1});
  assign if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = nl_if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_4_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl[20:0];
  assign nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_51_itm_23_14_1});
  assign if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl_1 = conv_u2u_20_21(states_4_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl_1[20:0];
  assign nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_4_nl_1)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_51_itm_23_14_1});
  assign if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_14_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl[20:0];
  assign nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_51_itm_23_14_1});
  assign if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl_1 = conv_u2u_20_21(states_14_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl_1[20:0];
  assign nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 =
      conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_4_nl_1) +
      conv_s2u_21_22({11'b10000000000 , if_1_for_acc_51_itm_23_14_1});
  assign if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = nl_if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_5_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl[20:0];
  assign nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_54_itm_17_8_1});
  assign if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl_1 = conv_u2u_20_21(states_5_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl_1[20:0];
  assign nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_5_nl_1)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_54_itm_17_8_1});
  assign if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_15_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl[20:0];
  assign nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_54_itm_17_8_1});
  assign if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl_1 = conv_u2u_20_21(states_15_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl_1[20:0];
  assign nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 =
      conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_5_nl_1) +
      conv_s2u_21_22({11'b10000000000 , if_1_for_acc_54_itm_17_8_1});
  assign if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = nl_if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_6_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl[20:0];
  assign nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_58_itm_19_10_1});
  assign if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl_1 = conv_u2u_20_21(states_6_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl_1[20:0];
  assign nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_6_nl_1)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_58_itm_19_10_1});
  assign if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_16_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl[20:0];
  assign nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_58_itm_19_10_1});
  assign if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl_1 = conv_u2u_20_21(states_16_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl_1[20:0];
  assign nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 =
      conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_6_nl_1) +
      conv_s2u_21_22({11'b10000000000 , if_1_for_acc_58_itm_19_10_1});
  assign if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = nl_if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_7_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl[20:0];
  assign nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_61_itm_18_9_1});
  assign if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl_1 = conv_u2u_20_21(states_7_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl_1[20:0];
  assign nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_7_nl_1)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_61_itm_18_9_1});
  assign if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_17_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl[20:0];
  assign nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_61_itm_18_9_1});
  assign if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl = nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl_1 = conv_u2u_20_21(states_17_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl_1[20:0];
  assign nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 =
      conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_7_nl_1) +
      conv_s2u_21_22({11'b10000000000 , if_1_for_acc_61_itm_18_9_1});
  assign if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1 = nl_if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl = conv_u2u_20_21(states_9_sva_dfm_1)
      + conv_u2u_20_21(~ states_8_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl[20:0];
  assign nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_64_itm_19_10_1});
  assign if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl = nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl[21:0];
  assign nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl_1 = conv_u2u_20_21(states_8_sva_dfm_1)
      + conv_u2u_20_21(~ states_9_sva_dfm_1) + 21'b000000000000000000001;
  assign operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl_1 = nl_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl_1[20:0];
  assign nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = conv_u2u_21_22(operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_8_nl_1)
      + conv_s2u_21_22({11'b10000000000 , if_1_for_acc_64_itm_19_10_1});
  assign if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1 = nl_if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1[21:0];
  assign F0_000000_1_dfmergedata_1_lpi_1_dfm_15_mx0w0 = ~((readslicef_22_1_21(if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl))
      | (readslicef_22_1_21(if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl))
      | (readslicef_22_1_21(if_1_for_1_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl))
      | (readslicef_22_1_21(if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl))
      | (readslicef_22_1_21(if_1_for_2_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl))
      | (readslicef_22_1_21(if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl))
      | (readslicef_22_1_21(if_1_for_3_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl))
      | (readslicef_22_1_21(if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl))
      | (readslicef_22_1_21(if_1_for_4_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl))
      | (readslicef_22_1_21(if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl))
      | (readslicef_22_1_21(if_1_for_5_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl))
      | (readslicef_22_1_21(if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl))
      | (readslicef_22_1_21(if_1_for_6_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl))
      | (readslicef_22_1_21(if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl))
      | (readslicef_22_1_21(if_1_for_7_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl))
      | (readslicef_22_1_21(if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl))
      | (readslicef_22_1_21(if_1_for_8_operator_20_10_false_AC_TRN_AC_WRAP_20_false_1_acc_nl_1))
      | (readslicef_22_1_21(if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl))
      | (readslicef_22_1_21(if_1_for_9_operator_20_10_false_AC_TRN_AC_WRAP_20_false_acc_nl_1)));
  assign or_98_nl = or_dcpl_96 | or_dcpl_94;
  assign states_9_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_9_sva,
      or_98_nl);
  assign or_101_nl = or_dcpl_99 | or_dcpl_98;
  assign states_0_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_0_sva,
      or_101_nl);
  assign or_104_nl = or_dcpl_96 | or_dcpl_102;
  assign states_10_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_10_sva,
      or_104_nl);
  assign or_105_nl = or_dcpl_99 | or_dcpl_94;
  assign states_1_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_1_sva,
      or_105_nl);
  assign or_107_nl = or_dcpl_96 | or_dcpl_105;
  assign states_11_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_11_sva,
      or_107_nl);
  assign or_108_nl = or_dcpl_99 | or_dcpl_102;
  assign states_2_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_2_sva,
      or_108_nl);
  assign or_111_nl = or_dcpl_96 | or_dcpl_109;
  assign states_12_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_12_sva,
      or_111_nl);
  assign or_112_nl = or_dcpl_99 | or_dcpl_105;
  assign states_3_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_3_sva,
      or_112_nl);
  assign or_114_nl = or_dcpl_96 | or_dcpl_112;
  assign states_13_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_13_sva,
      or_114_nl);
  assign or_115_nl = or_dcpl_99 | or_dcpl_109;
  assign states_4_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_4_sva,
      or_115_nl);
  assign nl_if_1_for_acc_65_nl = conv_u2u_23_24({(~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)
      , 3'b001}) + conv_u2u_20_24(~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1);
  assign if_1_for_acc_65_nl = nl_if_1_for_acc_65_nl[23:0];
  assign nl_if_1_for_acc_23_nl = conv_u2s_25_26({5'b11011 , (~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)})
      + ({if_1_for_acc_65_nl , 2'b01});
  assign if_1_for_acc_23_nl = nl_if_1_for_acc_23_nl[25:0];
  assign if_1_for_acc_23_itm_25_5_1 = readslicef_26_21_5(if_1_for_acc_23_nl);
  assign or_118_nl = or_dcpl_96 | or_dcpl_116;
  assign states_14_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_14_sva,
      or_118_nl);
  assign or_119_nl = or_dcpl_99 | or_dcpl_112;
  assign states_5_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_5_sva,
      or_119_nl);
  assign or_121_nl = or_dcpl_96 | or_dcpl_119;
  assign states_15_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_15_sva,
      or_121_nl);
  assign or_122_nl = or_dcpl_99 | or_dcpl_116;
  assign states_6_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_6_sva,
      or_122_nl);
  assign or_125_nl = or_dcpl_123 | or_dcpl_98;
  assign states_16_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_16_sva,
      or_125_nl);
  assign or_126_nl = or_dcpl_99 | or_dcpl_119;
  assign states_7_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_7_sva,
      or_126_nl);
  assign or_127_nl = or_dcpl_123 | or_dcpl_94;
  assign states_17_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_17_sva,
      or_127_nl);
  assign or_128_nl = or_dcpl_96 | or_dcpl_98;
  assign states_8_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_8_sva,
      or_128_nl);
  assign or_129_nl = or_dcpl_123 | or_dcpl_102;
  assign states_18_sva_dfm_1_mx0 = MUX_v_20_2_2(if_if_acc_1_ctmp_sva_1, states_18_sva,
      or_129_nl);
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      = MUX_v_20_2_2(20'b00000000000000000000, (operator_34_10_false_AC_TRN_AC_WRAP_lshift_itm[33:14]),
      F0_000000_1_dfmergedata_1_lpi_1_dfm_15);
  assign nl_if_1_for_acc_26_nl = ({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      , 2'b01}) + conv_s2u_21_22({1'b1 , (~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)});
  assign if_1_for_acc_26_nl = nl_if_1_for_acc_26_nl[21:0];
  assign nl_if_1_for_acc_27_nl = conv_u2u_24_25({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      , 4'b0000}) + conv_u2u_22_25(if_1_for_acc_26_nl);
  assign if_1_for_acc_27_nl = nl_if_1_for_acc_27_nl[24:0];
  assign if_1_for_acc_27_itm_24_6_1 = readslicef_25_19_6(if_1_for_acc_27_nl);
  assign nl_if_1_for_acc_17_nl = ({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      , 2'b01}) + conv_u2u_20_22(~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1);
  assign if_1_for_acc_17_nl = nl_if_1_for_acc_17_nl[21:0];
  assign nl_if_1_for_acc_18_sdt_1 = conv_u2u_25_26({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      , 5'b00000}) + conv_u2u_22_26(if_1_for_acc_17_nl);
  assign if_1_for_acc_18_sdt_1 = nl_if_1_for_acc_18_sdt_1[25:0];
  assign if_mux_nl = MUX_v_20_19_2(states_0_sva, states_1_sva, states_2_sva, states_3_sva,
      states_4_sva, states_5_sva, states_6_sva, states_7_sva, states_8_sva, states_9_sva,
      states_10_sva, states_11_sva, states_12_sva, states_13_sva, states_14_sva,
      states_15_sva, states_16_sva, states_17_sva, states_18_sva, S_sva[4:0]);
  assign nl_if_if_acc_1_ctmp_sva_1 = if_mux_nl + 20'b00000000000000000001;
  assign if_if_acc_1_ctmp_sva_1 = nl_if_if_acc_1_ctmp_sva_1[19:0];
  assign nl_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qif_acc_tmp =
      ({1'b1 , (~ leading_sign_20_0_f14c4ed6431fe22f800966f133448fe52396_1)}) + 6'b010101;
  assign ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qif_acc_tmp = nl_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qif_acc_tmp[5:0];
  assign ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qr_5_0_lpi_1_dfm_1
      = MUX_v_6_2_2(6'b000000, ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qif_acc_tmp,
      ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_or_cse_1);
  assign ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_or_cse_1
      = (states_9_sva_dfm_1_mx0!=20'b00000000000000000000);
  assign nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_1_nl
      = ({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1
      , (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mul_psp_sva_1[10:0])})
      + conv_u2u_19_24({(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mul_psp_sva_1[10:0])
      , 2'b00 , (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mul_psp_sva_1[10:5])});
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_1_nl
      = nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_1_nl[23:0];
  assign nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_2_nl
      = ({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1
      , (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mul_psp_sva_1[10:0])
      , 2'b00}) + conv_u2u_24_26(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_1_nl);
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_2_nl
      = nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_2_nl[25:0];
  assign nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_3_nl
      = ({(~ (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1[11:0]))
      , (~ (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mul_psp_sva_1[10:0]))
      , 4'b0000}) + conv_u2u_26_27(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_2_nl);
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_3_nl
      = nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_3_nl[26:0];
  assign nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_8_nl
      = ({(~ (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1[11:0]))
      , (~ (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mul_psp_sva_1[10:0]))
      , 2'b01}) + conv_u2u_24_25({1'b1 , (readslicef_27_23_4(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_3_nl))});
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_8_nl
      = nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_8_nl[24:0];
  assign nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_slc_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_000000
      = ({1'b1 , (readslicef_25_23_2(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_acc_8_nl))})
      + 24'b110000000000000000000001;
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_slc_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_000000
      = nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_slc_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_000000[23:0];
  assign nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_sva_1
      = ({1'b1 , ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_slc_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_000000})
      + ({(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1[11:0])
      , ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1});
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_sva_1
      = nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_sva_1[24:0];
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mux_1_nl
      = MUX_v_10_4_2(10'b0110101001, 10'b1001010100, 10'b1011101110, 10'b1101111100,
      operator_20_0_false_AC_TRN_AC_WRAP_lshift_itm[18:17]);
  assign nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1
      = conv_u2u_9_13(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mul_psp_sva_1[19:11])
      + conv_u2u_12_13({1'b1 , ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mux_1_nl
      , 1'b1});
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1
      = nl_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1[12:0];
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mux_nl
      = MUX_v_6_4_2(6'b101011, 6'b011010, 6'b001110, 6'b000100, operator_20_0_false_AC_TRN_AC_WRAP_lshift_itm[18:17]);
  assign ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mul_psp_sva_1
      = (operator_20_0_false_AC_TRN_AC_WRAP_lshift_itm[16:5]) * ({2'b10 , ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mux_nl});
  assign nl_if_1_for_acc_10_nl = ({(~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)
      , 5'b00000}) + conv_u2u_23_25({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      , 3'b000}) + conv_u2u_20_25(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1);
  assign if_1_for_acc_10_nl = nl_if_1_for_acc_10_nl[24:0];
  assign nl_if_1_for_acc_11_nl = ({(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[17:0])
      , 8'b00100000}) + conv_u2u_25_26(if_1_for_acc_10_nl);
  assign if_1_for_acc_11_nl = nl_if_1_for_acc_11_nl[25:0];
  assign nl_if_1_for_acc_nl = if_1_for_acc_11_nl + ({9'b100000000 , (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[19:3])});
  assign if_1_for_acc_nl = nl_if_1_for_acc_nl[25:0];
  assign if_1_for_acc_itm_25_16_1 = readslicef_26_10_16(if_1_for_acc_nl);
  assign nl_if_1_for_acc_12_nl = ({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      , 4'b0001}) + conv_s2u_21_24({1'b1 , (~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)});
  assign if_1_for_acc_12_nl = nl_if_1_for_acc_12_nl[23:0];
  assign nl_if_1_for_acc_13_nl = conv_u2u_26_27({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      , 6'b000000}) + conv_u2u_24_27(if_1_for_acc_12_nl);
  assign if_1_for_acc_13_nl = nl_if_1_for_acc_13_nl[26:0];
  assign nl_if_1_for_acc_68_nl = ({(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[16:0])
      , 2'b01}) + conv_u2u_18_19(readslicef_27_18_9(if_1_for_acc_13_nl));
  assign if_1_for_acc_68_nl = nl_if_1_for_acc_68_nl[18:0];
  assign nl_if_1_for_acc_42_nl = if_1_for_acc_68_nl + (~ (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[18:0]));
  assign if_1_for_acc_42_nl = nl_if_1_for_acc_42_nl[18:0];
  assign if_1_for_acc_42_itm_18_9_1 = readslicef_19_10_9(if_1_for_acc_42_nl);
  assign nl_if_1_for_acc_16_nl = conv_u2u_23_24({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      , 3'b000}) + conv_u2u_20_24(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)
      + conv_u2u_18_24(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[19:2]);
  assign if_1_for_acc_16_nl = nl_if_1_for_acc_16_nl[23:0];
  assign nl_if_1_for_acc_43_nl = conv_u2u_15_17(readslicef_24_15_9(if_1_for_acc_16_nl))
      + (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[16:0]);
  assign if_1_for_acc_43_nl = nl_if_1_for_acc_43_nl[16:0];
  assign if_1_for_acc_43_itm_16_7_1 = readslicef_17_10_7(if_1_for_acc_43_nl);
  assign nl_if_1_for_acc_77_nl = (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[18:2])
      + (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[16:0]);
  assign if_1_for_acc_77_nl = nl_if_1_for_acc_77_nl[16:0];
  assign nl_if_1_for_acc_44_nl = conv_u2u_20_21(~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)
      + conv_u2u_19_21(if_1_for_acc_18_sdt_1[25:7]);
  assign if_1_for_acc_44_nl = nl_if_1_for_acc_44_nl[20:0];
  assign nl_if_1_for_acc_21_nl = ({if_1_for_acc_44_nl , (if_1_for_acc_18_sdt_1[6:0])})
      + conv_u2u_27_28({9'b111111100 , (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[19:2])});
  assign if_1_for_acc_21_nl = nl_if_1_for_acc_21_nl[27:0];
  assign nl_if_1_for_acc_47_nl = ({if_1_for_acc_77_nl , (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[1:0])
      , 2'b01}) + (readslicef_28_21_7(if_1_for_acc_21_nl));
  assign if_1_for_acc_47_nl = nl_if_1_for_acc_47_nl[20:0];
  assign if_1_for_acc_47_itm_20_11_1 = readslicef_21_10_11(if_1_for_acc_47_nl);
  assign nl_if_1_for_acc_78_nl = (~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)
      + ({(~ (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[17:0]))
      , 2'b01});
  assign if_1_for_acc_78_nl = nl_if_1_for_acc_78_nl[19:0];
  assign nl_if_1_for_acc_79_nl = ({(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[15:0])
      , 2'b01}) + conv_s2s_16_18({1'b1 , (if_1_for_acc_23_itm_25_5_1[20:6])});
  assign if_1_for_acc_79_nl = nl_if_1_for_acc_79_nl[17:0];
  assign nl_if_1_for_acc_51_nl = ({if_1_for_acc_78_nl , 4'b0001}) + ({if_1_for_acc_79_nl
      , (if_1_for_acc_23_itm_25_5_1[5:0])});
  assign if_1_for_acc_51_nl = nl_if_1_for_acc_51_nl[23:0];
  assign if_1_for_acc_51_itm_23_14_1 = readslicef_24_10_14(if_1_for_acc_51_nl);
  assign nl_if_1_for_acc_66_nl = conv_u2u_20_21(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)
      + conv_u2u_19_21(if_1_for_acc_27_itm_24_6_1);
  assign if_1_for_acc_66_nl = nl_if_1_for_acc_66_nl[20:0];
  assign nl_if_1_for_acc_72_nl = ({(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[15:0])
      , 2'b01}) + conv_u2u_15_18(readslicef_21_15_6(if_1_for_acc_66_nl));
  assign if_1_for_acc_72_nl = nl_if_1_for_acc_72_nl[17:0];
  assign nl_if_1_for_acc_54_nl = if_1_for_acc_72_nl + (~ (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[17:0]));
  assign if_1_for_acc_54_nl = nl_if_1_for_acc_54_nl[17:0];
  assign if_1_for_acc_54_itm_17_8_1 = readslicef_18_10_8(if_1_for_acc_54_nl);
  assign nl_if_1_for_acc_31_nl = conv_u2u_24_25({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      , 4'b0000}) + conv_u2u_20_25(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)
      + conv_u2u_17_25(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[19:3]);
  assign if_1_for_acc_31_nl = nl_if_1_for_acc_31_nl[24:0];
  assign nl_if_1_for_acc_73_nl = ({(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[15:0])
      , 4'b0100}) + conv_u2u_18_20(readslicef_25_18_7(if_1_for_acc_31_nl));
  assign if_1_for_acc_73_nl = nl_if_1_for_acc_73_nl[19:0];
  assign nl_if_1_for_acc_58_nl = if_1_for_acc_73_nl + ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      + ({(~ (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[17:0]))
      , 2'b00});
  assign if_1_for_acc_58_nl = nl_if_1_for_acc_58_nl[19:0];
  assign if_1_for_acc_58_itm_19_10_1 = readslicef_20_10_10(if_1_for_acc_58_nl);
  assign nl_if_1_for_acc_34_nl = conv_u2s_24_25({4'b1111 , (~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)})
      + conv_u2s_24_25({(~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1)
      , 4'b0001});
  assign if_1_for_acc_34_nl = nl_if_1_for_acc_34_nl[24:0];
  assign nl_if_1_for_acc_67_nl = ({ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1
      , 3'b001}) + conv_s2u_22_23({1'b1 , (readslicef_25_21_4(if_1_for_acc_34_nl))});
  assign if_1_for_acc_67_nl = nl_if_1_for_acc_67_nl[22:0];
  assign nl_if_1_for_acc_75_nl = ({(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[15:0])
      , 3'b001}) + conv_u2u_16_19(readslicef_23_16_7(if_1_for_acc_67_nl));
  assign if_1_for_acc_75_nl = nl_if_1_for_acc_75_nl[18:0];
  assign nl_if_1_for_acc_61_nl = if_1_for_acc_75_nl + (~ (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[18:0]));
  assign if_1_for_acc_61_nl = nl_if_1_for_acc_61_nl[18:0];
  assign if_1_for_acc_61_itm_18_9_1 = readslicef_19_10_9(if_1_for_acc_61_nl);
  assign nl_if_1_for_acc_76_nl = ({(ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1[15:0])
      , 4'b0001}) + conv_u2u_15_20(if_1_for_acc_27_itm_24_6_1[18:4]);
  assign if_1_for_acc_76_nl = nl_if_1_for_acc_76_nl[19:0];
  assign nl_if_1_for_acc_64_nl = if_1_for_acc_76_nl + (~ ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_qr_lpi_1_dfm_1);
  assign if_1_for_acc_64_nl = nl_if_1_for_acc_64_nl[19:0];
  assign if_1_for_acc_64_itm_19_10_1 = readslicef_20_10_10(if_1_for_acc_64_nl);
  assign or_dcpl_32 = ~((asn_39_itm_1[16:15]==2'b11));
  assign or_dcpl_34 = ~((asn_39_itm_1[19:17]==3'b111));
  assign or_dcpl_37 = or_dcpl_34 | or_dcpl_32 | (asn_39_itm_1[14:0]!=15'b111111111111111);
  assign and_dcpl_100 = (reg_count_cse==20'b11111111111111111111) & (~ (ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qif_acc_tmp[0]));
  assign or_dcpl_93 = (S_sva[2:1]!=2'b00);
  assign or_dcpl_94 = or_dcpl_93 | (~ (S_sva[0]));
  assign nl_operator_16_true_acc_nl = conv_s2s_16_17(~ S_sva) + 17'b00000000000010011;
  assign operator_16_true_acc_nl = nl_operator_16_true_acc_nl[16:0];
  assign operator_16_true_acc_itm_16 = readslicef_17_1_16(operator_16_true_acc_nl);
  assign not_tmp_85 = (S_sva[15]) | operator_16_true_acc_itm_16;
  assign or_dcpl_95 = (S_sva[4]) | not_tmp_85;
  assign or_dcpl_96 = or_dcpl_95 | (~ (S_sva[3]));
  assign or_dcpl_98 = or_dcpl_93 | (S_sva[0]);
  assign or_dcpl_99 = or_dcpl_95 | (S_sva[3]);
  assign or_dcpl_101 = (S_sva[2:1]!=2'b01);
  assign or_dcpl_102 = or_dcpl_101 | (S_sva[0]);
  assign or_dcpl_105 = or_dcpl_101 | (~ (S_sva[0]));
  assign or_dcpl_108 = (S_sva[2:1]!=2'b10);
  assign or_dcpl_109 = or_dcpl_108 | (S_sva[0]);
  assign or_dcpl_112 = or_dcpl_108 | (~ (S_sva[0]));
  assign or_dcpl_115 = ~((S_sva[2:1]==2'b11));
  assign or_dcpl_116 = or_dcpl_115 | (S_sva[0]);
  assign or_dcpl_119 = or_dcpl_115 | (~ (S_sva[0]));
  assign or_dcpl_123 = (~ (S_sva[4])) | not_tmp_85 | (S_sva[3]);
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      reg_valid_triosy_obj_ld_cse <= 1'b0;
      ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_mux_1_itm_1
          <= 13'b0000000000000;
      ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_mux_2_itm_1
          <= 11'b00000000000;
      ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_and_itm_1
          <= 1'b0;
      ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_slc_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qr_5_0_5_1_itm_1
          <= 5'b00000;
      unequal_tmp_1 <= 1'b0;
      asn_39_itm_1 <= 20'b00000000000000000000;
      S_sva <= 16'b0000000000001001;
      epsilon_triosy_obj_ld <= 1'b0;
      reg_count_cse <= 20'b00000000000000000000;
    end
    else begin
      reg_valid_triosy_obj_ld_cse <= epsilon_triosy_obj_ld;
      ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_mux_1_itm_1
          <= MUX_v_13_2_2((ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_sva_1[24:12]),
          ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1,
          and_dcpl_100);
      ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_mux_2_itm_1
          <= MUX_v_11_2_2((ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_sva_1[11:1]),
          (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_mul_psp_sva_1[10:0]),
          and_dcpl_100);
      ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_m1_and_itm_1
          <= (ac_math_ac_sqrt_pwl_AC_TRN_20_20_AC_TRN_AC_WRAP_20_10_AC_TRN_AC_WRAP_normalized_output_temp_sva_1[0])
          & (ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qr_5_0_lpi_1_dfm_1[0]);
      ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_slc_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qr_5_0_5_1_itm_1
          <= ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_qr_5_0_lpi_1_dfm_1[5:1];
      unequal_tmp_1 <= nand_69_cse;
      asn_39_itm_1 <= reg_count_cse;
      S_sva <= nl_S_sva[15:0];
      epsilon_triosy_obj_ld <= 1'b1;
      reg_count_cse <= nl_reg_count_cse[19:0];
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      valid_rsci_idat <= 1'b0;
      is_random_rsci_idat <= 1'b0;
    end
    else if ( epsilon_triosy_obj_ld ) begin
      valid_rsci_idat <= ~ unequal_tmp_1;
      is_random_rsci_idat <= if_1_for_if_mux_nl & (~ if_1_for_oelse_1_mux_nl) & (~
          unequal_tmp_1);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      if_1_for_lor_1_lpi_1_dfm <= 1'b0;
    end
    else if ( or_18_cse & (~(or_dcpl_34 | or_dcpl_32 | (asn_39_itm_1[14:1]!=14'b11111111111111)
        | (~((asn_39_itm_1[0]) & epsilon_triosy_obj_ld)))) ) begin
      if_1_for_lor_1_lpi_1_dfm <= if_1_for_lor_1_lpi_1_dfm_mx0w0;
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      F0_000000_1_dfmergedata_1_lpi_1_dfm_15 <= 1'b0;
    end
    else if ( (or_18_cse & (asn_39_itm_1==20'b11111111111111111111) & epsilon_triosy_obj_ld)
        | and_131_cse ) begin
      F0_000000_1_dfmergedata_1_lpi_1_dfm_15 <= MUX_s_1_2_2(F0_000000_1_dfmergedata_1_lpi_1_dfm_15_mx0w0,
          ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_20_20_false_AC_TRN_AC_WRAP_expret_or_cse_1,
          and_131_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_9_sva_dfm_1 <= 20'b00000000000000000000;
      states_0_sva_dfm_1 <= 20'b00000000000000000000;
      states_10_sva_dfm_1 <= 20'b00000000000000000000;
      states_1_sva_dfm_1 <= 20'b00000000000000000000;
      states_11_sva_dfm_1 <= 20'b00000000000000000000;
      states_2_sva_dfm_1 <= 20'b00000000000000000000;
      states_12_sva_dfm_1 <= 20'b00000000000000000000;
      states_3_sva_dfm_1 <= 20'b00000000000000000000;
      states_13_sva_dfm_1 <= 20'b00000000000000000000;
      states_4_sva_dfm_1 <= 20'b00000000000000000000;
      states_14_sva_dfm_1 <= 20'b00000000000000000000;
      states_5_sva_dfm_1 <= 20'b00000000000000000000;
      states_15_sva_dfm_1 <= 20'b00000000000000000000;
      states_6_sva_dfm_1 <= 20'b00000000000000000000;
      states_16_sva_dfm_1 <= 20'b00000000000000000000;
      states_7_sva_dfm_1 <= 20'b00000000000000000000;
      states_17_sva_dfm_1 <= 20'b00000000000000000000;
      states_8_sva_dfm_1 <= 20'b00000000000000000000;
      states_18_sva_dfm_1 <= 20'b00000000000000000000;
    end
    else if ( and_131_cse ) begin
      states_9_sva_dfm_1 <= states_9_sva_dfm_1_mx0;
      states_0_sva_dfm_1 <= states_0_sva_dfm_1_mx0;
      states_10_sva_dfm_1 <= states_10_sva_dfm_1_mx0;
      states_1_sva_dfm_1 <= states_1_sva_dfm_1_mx0;
      states_11_sva_dfm_1 <= states_11_sva_dfm_1_mx0;
      states_2_sva_dfm_1 <= states_2_sva_dfm_1_mx0;
      states_12_sva_dfm_1 <= states_12_sva_dfm_1_mx0;
      states_3_sva_dfm_1 <= states_3_sva_dfm_1_mx0;
      states_13_sva_dfm_1 <= states_13_sva_dfm_1_mx0;
      states_4_sva_dfm_1 <= states_4_sva_dfm_1_mx0;
      states_14_sva_dfm_1 <= states_14_sva_dfm_1_mx0;
      states_5_sva_dfm_1 <= states_5_sva_dfm_1_mx0;
      states_15_sva_dfm_1 <= states_15_sva_dfm_1_mx0;
      states_6_sva_dfm_1 <= states_6_sva_dfm_1_mx0;
      states_16_sva_dfm_1 <= states_16_sva_dfm_1_mx0;
      states_7_sva_dfm_1 <= states_7_sva_dfm_1_mx0;
      states_17_sva_dfm_1 <= states_17_sva_dfm_1_mx0;
      states_8_sva_dfm_1 <= states_8_sva_dfm_1_mx0;
      states_18_sva_dfm_1 <= states_18_sva_dfm_1_mx0;
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_9_sva <= 20'b00000000000000000001;
    end
    else if ( (~((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b1001)))
        | and_131_cse ) begin
      states_9_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_9_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_0_sva <= 20'b00000000000000000000;
    end
    else if ( ~(((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0000))
        & nand_69_cse) ) begin
      states_0_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_0_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_1_sva <= 20'b00000000000000000000;
    end
    else if ( (~((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0001)))
        | and_131_cse ) begin
      states_1_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_1_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_2_sva <= 20'b00000000000000000000;
    end
    else if ( ~(((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0010))
        & nand_69_cse) ) begin
      states_2_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_2_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_3_sva <= 20'b00000000000000000000;
    end
    else if ( (~((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0011)))
        | and_131_cse ) begin
      states_3_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_3_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_4_sva <= 20'b00000000000000000000;
    end
    else if ( ~(((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0100))
        & nand_69_cse) ) begin
      states_4_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_4_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_5_sva <= 20'b00000000000000000000;
    end
    else if ( (~((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0101)))
        | and_131_cse ) begin
      states_5_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_5_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_6_sva <= 20'b00000000000000000000;
    end
    else if ( ~(((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0110))
        & nand_69_cse) ) begin
      states_6_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_6_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_7_sva <= 20'b00000000000000000000;
    end
    else if ( (~((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0111)))
        | and_131_cse ) begin
      states_7_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_7_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_8_sva <= 20'b00000000000000000000;
    end
    else if ( ~(((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b1000))
        & nand_69_cse) ) begin
      states_8_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_8_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_10_sva <= 20'b00000000000000000000;
    end
    else if ( ~(((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b1010))
        & nand_69_cse) ) begin
      states_10_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_10_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_11_sva <= 20'b00000000000000000000;
    end
    else if ( (~((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b1011)))
        | and_131_cse ) begin
      states_11_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_11_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_12_sva <= 20'b00000000000000000000;
    end
    else if ( ~(((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b1100))
        & nand_69_cse) ) begin
      states_12_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_12_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_13_sva <= 20'b00000000000000000000;
    end
    else if ( (~((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b1101)))
        | and_131_cse ) begin
      states_13_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_13_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_14_sva <= 20'b00000000000000000000;
    end
    else if ( ~(((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b1110))
        & nand_69_cse) ) begin
      states_14_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_14_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_15_sva <= 20'b00000000000000000000;
    end
    else if ( (~((S_sva[4]) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b1111)))
        | and_131_cse ) begin
      states_15_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_15_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_16_sva <= 20'b00000000000000000000;
    end
    else if ( ~(((~ (S_sva[4])) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0000))
        & nand_69_cse) ) begin
      states_16_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_16_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_17_sva <= 20'b00000000000000000000;
    end
    else if ( (~((~ (S_sva[4])) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0001)))
        | and_131_cse ) begin
      states_17_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_17_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  always @(posedge clk) begin
    if ( ~ rst_n ) begin
      states_18_sva <= 20'b00000000000000000000;
    end
    else if ( ~(((~ (S_sva[4])) | (S_sva[15]) | operator_16_true_acc_itm_16 | (S_sva[3:0]!=4'b0010))
        & nand_69_cse) ) begin
      states_18_sva <= MUX_v_20_2_2(20'b00000000000000000000, states_18_sva_dfm_1_mx0,
          nand_69_cse);
    end
  end
  assign nl_S_sva  = S_sva + conv_s2u_2_16({(~ epsilon_rsci_idat) , 1'b1});
  assign nl_reg_count_cse  = reg_count_cse + 20'b00000000000000000001;
  assign if_1_for_if_mux_nl = MUX_s_1_2_2(F0_000000_1_dfmergedata_1_lpi_1_dfm_15_mx0w0,
      F0_000000_1_dfmergedata_1_lpi_1_dfm_15, or_dcpl_37);
  assign if_1_for_oelse_1_mux_nl = MUX_s_1_2_2(if_1_for_lor_1_lpi_1_dfm_mx0w0, if_1_for_lor_1_lpi_1_dfm,
      or_dcpl_37);

  function automatic  MUX_s_1_2_2;
    input  input_0;
    input  input_1;
    input  sel;
    reg  result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function automatic [9:0] MUX_v_10_4_2;
    input [9:0] input_0;
    input [9:0] input_1;
    input [9:0] input_2;
    input [9:0] input_3;
    input [1:0] sel;
    reg [9:0] result;
  begin
    case (sel)
      2'b00 : begin
        result = input_0;
      end
      2'b01 : begin
        result = input_1;
      end
      2'b10 : begin
        result = input_2;
      end
      default : begin
        result = input_3;
      end
    endcase
    MUX_v_10_4_2 = result;
  end
  endfunction


  function automatic [10:0] MUX_v_11_2_2;
    input [10:0] input_0;
    input [10:0] input_1;
    input  sel;
    reg [10:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_11_2_2 = result;
  end
  endfunction


  function automatic [12:0] MUX_v_13_2_2;
    input [12:0] input_0;
    input [12:0] input_1;
    input  sel;
    reg [12:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_13_2_2 = result;
  end
  endfunction


  function automatic [19:0] MUX_v_20_19_2;
    input [19:0] input_0;
    input [19:0] input_1;
    input [19:0] input_2;
    input [19:0] input_3;
    input [19:0] input_4;
    input [19:0] input_5;
    input [19:0] input_6;
    input [19:0] input_7;
    input [19:0] input_8;
    input [19:0] input_9;
    input [19:0] input_10;
    input [19:0] input_11;
    input [19:0] input_12;
    input [19:0] input_13;
    input [19:0] input_14;
    input [19:0] input_15;
    input [19:0] input_16;
    input [19:0] input_17;
    input [19:0] input_18;
    input [4:0] sel;
    reg [19:0] result;
  begin
    case (sel)
      5'b00000 : begin
        result = input_0;
      end
      5'b00001 : begin
        result = input_1;
      end
      5'b00010 : begin
        result = input_2;
      end
      5'b00011 : begin
        result = input_3;
      end
      5'b00100 : begin
        result = input_4;
      end
      5'b00101 : begin
        result = input_5;
      end
      5'b00110 : begin
        result = input_6;
      end
      5'b00111 : begin
        result = input_7;
      end
      5'b01000 : begin
        result = input_8;
      end
      5'b01001 : begin
        result = input_9;
      end
      5'b01010 : begin
        result = input_10;
      end
      5'b01011 : begin
        result = input_11;
      end
      5'b01100 : begin
        result = input_12;
      end
      5'b01101 : begin
        result = input_13;
      end
      5'b01110 : begin
        result = input_14;
      end
      5'b01111 : begin
        result = input_15;
      end
      5'b10000 : begin
        result = input_16;
      end
      5'b10001 : begin
        result = input_17;
      end
      default : begin
        result = input_18;
      end
    endcase
    MUX_v_20_19_2 = result;
  end
  endfunction


  function automatic [19:0] MUX_v_20_2_2;
    input [19:0] input_0;
    input [19:0] input_1;
    input  sel;
    reg [19:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_20_2_2 = result;
  end
  endfunction


  function automatic [5:0] MUX_v_6_2_2;
    input [5:0] input_0;
    input [5:0] input_1;
    input  sel;
    reg [5:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_6_2_2 = result;
  end
  endfunction


  function automatic [5:0] MUX_v_6_4_2;
    input [5:0] input_0;
    input [5:0] input_1;
    input [5:0] input_2;
    input [5:0] input_3;
    input [1:0] sel;
    reg [5:0] result;
  begin
    case (sel)
      2'b00 : begin
        result = input_0;
      end
      2'b01 : begin
        result = input_1;
      end
      2'b10 : begin
        result = input_2;
      end
      default : begin
        result = input_3;
      end
    endcase
    MUX_v_6_4_2 = result;
  end
  endfunction


  function automatic [9:0] readslicef_17_10_7;
    input [16:0] vector;
    reg [16:0] tmp;
  begin
    tmp = vector >> 7;
    readslicef_17_10_7 = tmp[9:0];
  end
  endfunction


  function automatic [0:0] readslicef_17_1_16;
    input [16:0] vector;
    reg [16:0] tmp;
  begin
    tmp = vector >> 16;
    readslicef_17_1_16 = tmp[0:0];
  end
  endfunction


  function automatic [9:0] readslicef_18_10_8;
    input [17:0] vector;
    reg [17:0] tmp;
  begin
    tmp = vector >> 8;
    readslicef_18_10_8 = tmp[9:0];
  end
  endfunction


  function automatic [9:0] readslicef_19_10_9;
    input [18:0] vector;
    reg [18:0] tmp;
  begin
    tmp = vector >> 9;
    readslicef_19_10_9 = tmp[9:0];
  end
  endfunction


  function automatic [9:0] readslicef_20_10_10;
    input [19:0] vector;
    reg [19:0] tmp;
  begin
    tmp = vector >> 10;
    readslicef_20_10_10 = tmp[9:0];
  end
  endfunction


  function automatic [9:0] readslicef_21_10_11;
    input [20:0] vector;
    reg [20:0] tmp;
  begin
    tmp = vector >> 11;
    readslicef_21_10_11 = tmp[9:0];
  end
  endfunction


  function automatic [14:0] readslicef_21_15_6;
    input [20:0] vector;
    reg [20:0] tmp;
  begin
    tmp = vector >> 6;
    readslicef_21_15_6 = tmp[14:0];
  end
  endfunction


  function automatic [0:0] readslicef_22_1_21;
    input [21:0] vector;
    reg [21:0] tmp;
  begin
    tmp = vector >> 21;
    readslicef_22_1_21 = tmp[0:0];
  end
  endfunction


  function automatic [15:0] readslicef_23_16_7;
    input [22:0] vector;
    reg [22:0] tmp;
  begin
    tmp = vector >> 7;
    readslicef_23_16_7 = tmp[15:0];
  end
  endfunction


  function automatic [9:0] readslicef_24_10_14;
    input [23:0] vector;
    reg [23:0] tmp;
  begin
    tmp = vector >> 14;
    readslicef_24_10_14 = tmp[9:0];
  end
  endfunction


  function automatic [14:0] readslicef_24_15_9;
    input [23:0] vector;
    reg [23:0] tmp;
  begin
    tmp = vector >> 9;
    readslicef_24_15_9 = tmp[14:0];
  end
  endfunction


  function automatic [17:0] readslicef_25_18_7;
    input [24:0] vector;
    reg [24:0] tmp;
  begin
    tmp = vector >> 7;
    readslicef_25_18_7 = tmp[17:0];
  end
  endfunction


  function automatic [18:0] readslicef_25_19_6;
    input [24:0] vector;
    reg [24:0] tmp;
  begin
    tmp = vector >> 6;
    readslicef_25_19_6 = tmp[18:0];
  end
  endfunction


  function automatic [20:0] readslicef_25_21_4;
    input [24:0] vector;
    reg [24:0] tmp;
  begin
    tmp = vector >> 4;
    readslicef_25_21_4 = tmp[20:0];
  end
  endfunction


  function automatic [22:0] readslicef_25_23_2;
    input [24:0] vector;
    reg [24:0] tmp;
  begin
    tmp = vector >> 2;
    readslicef_25_23_2 = tmp[22:0];
  end
  endfunction


  function automatic [9:0] readslicef_26_10_16;
    input [25:0] vector;
    reg [25:0] tmp;
  begin
    tmp = vector >> 16;
    readslicef_26_10_16 = tmp[9:0];
  end
  endfunction


  function automatic [20:0] readslicef_26_21_5;
    input [25:0] vector;
    reg [25:0] tmp;
  begin
    tmp = vector >> 5;
    readslicef_26_21_5 = tmp[20:0];
  end
  endfunction


  function automatic [17:0] readslicef_27_18_9;
    input [26:0] vector;
    reg [26:0] tmp;
  begin
    tmp = vector >> 9;
    readslicef_27_18_9 = tmp[17:0];
  end
  endfunction


  function automatic [22:0] readslicef_27_23_4;
    input [26:0] vector;
    reg [26:0] tmp;
  begin
    tmp = vector >> 4;
    readslicef_27_23_4 = tmp[22:0];
  end
  endfunction


  function automatic [20:0] readslicef_28_21_7;
    input [27:0] vector;
    reg [27:0] tmp;
  begin
    tmp = vector >> 7;
    readslicef_28_21_7 = tmp[20:0];
  end
  endfunction


  function automatic [16:0] conv_s2s_16_17 ;
    input [15:0]  vector ;
  begin
    conv_s2s_16_17 = {vector[15], vector};
  end
  endfunction


  function automatic [17:0] conv_s2s_16_18 ;
    input [15:0]  vector ;
  begin
    conv_s2s_16_18 = {{2{vector[15]}}, vector};
  end
  endfunction


  function automatic [15:0] conv_s2u_2_16 ;
    input [1:0]  vector ;
  begin
    conv_s2u_2_16 = {{14{vector[1]}}, vector};
  end
  endfunction


  function automatic [21:0] conv_s2u_21_22 ;
    input [20:0]  vector ;
  begin
    conv_s2u_21_22 = {vector[20], vector};
  end
  endfunction


  function automatic [23:0] conv_s2u_21_24 ;
    input [20:0]  vector ;
  begin
    conv_s2u_21_24 = {{3{vector[20]}}, vector};
  end
  endfunction


  function automatic [22:0] conv_s2u_22_23 ;
    input [21:0]  vector ;
  begin
    conv_s2u_22_23 = {vector[21], vector};
  end
  endfunction


  function automatic [24:0] conv_u2s_24_25 ;
    input [23:0]  vector ;
  begin
    conv_u2s_24_25 =  {1'b0, vector};
  end
  endfunction


  function automatic [25:0] conv_u2s_25_26 ;
    input [24:0]  vector ;
  begin
    conv_u2s_25_26 =  {1'b0, vector};
  end
  endfunction


  function automatic [12:0] conv_u2u_9_13 ;
    input [8:0]  vector ;
  begin
    conv_u2u_9_13 = {{4{1'b0}}, vector};
  end
  endfunction


  function automatic [12:0] conv_u2u_12_13 ;
    input [11:0]  vector ;
  begin
    conv_u2u_12_13 = {1'b0, vector};
  end
  endfunction


  function automatic [16:0] conv_u2u_15_17 ;
    input [14:0]  vector ;
  begin
    conv_u2u_15_17 = {{2{1'b0}}, vector};
  end
  endfunction


  function automatic [17:0] conv_u2u_15_18 ;
    input [14:0]  vector ;
  begin
    conv_u2u_15_18 = {{3{1'b0}}, vector};
  end
  endfunction


  function automatic [19:0] conv_u2u_15_20 ;
    input [14:0]  vector ;
  begin
    conv_u2u_15_20 = {{5{1'b0}}, vector};
  end
  endfunction


  function automatic [18:0] conv_u2u_16_19 ;
    input [15:0]  vector ;
  begin
    conv_u2u_16_19 = {{3{1'b0}}, vector};
  end
  endfunction


  function automatic [24:0] conv_u2u_17_25 ;
    input [16:0]  vector ;
  begin
    conv_u2u_17_25 = {{8{1'b0}}, vector};
  end
  endfunction


  function automatic [18:0] conv_u2u_18_19 ;
    input [17:0]  vector ;
  begin
    conv_u2u_18_19 = {1'b0, vector};
  end
  endfunction


  function automatic [19:0] conv_u2u_18_20 ;
    input [17:0]  vector ;
  begin
    conv_u2u_18_20 = {{2{1'b0}}, vector};
  end
  endfunction


  function automatic [23:0] conv_u2u_18_24 ;
    input [17:0]  vector ;
  begin
    conv_u2u_18_24 = {{6{1'b0}}, vector};
  end
  endfunction


  function automatic [20:0] conv_u2u_19_21 ;
    input [18:0]  vector ;
  begin
    conv_u2u_19_21 = {{2{1'b0}}, vector};
  end
  endfunction


  function automatic [23:0] conv_u2u_19_24 ;
    input [18:0]  vector ;
  begin
    conv_u2u_19_24 = {{5{1'b0}}, vector};
  end
  endfunction


  function automatic [20:0] conv_u2u_20_21 ;
    input [19:0]  vector ;
  begin
    conv_u2u_20_21 = {1'b0, vector};
  end
  endfunction


  function automatic [21:0] conv_u2u_20_22 ;
    input [19:0]  vector ;
  begin
    conv_u2u_20_22 = {{2{1'b0}}, vector};
  end
  endfunction


  function automatic [23:0] conv_u2u_20_24 ;
    input [19:0]  vector ;
  begin
    conv_u2u_20_24 = {{4{1'b0}}, vector};
  end
  endfunction


  function automatic [24:0] conv_u2u_20_25 ;
    input [19:0]  vector ;
  begin
    conv_u2u_20_25 = {{5{1'b0}}, vector};
  end
  endfunction


  function automatic [21:0] conv_u2u_21_22 ;
    input [20:0]  vector ;
  begin
    conv_u2u_21_22 = {1'b0, vector};
  end
  endfunction


  function automatic [24:0] conv_u2u_22_25 ;
    input [21:0]  vector ;
  begin
    conv_u2u_22_25 = {{3{1'b0}}, vector};
  end
  endfunction


  function automatic [25:0] conv_u2u_22_26 ;
    input [21:0]  vector ;
  begin
    conv_u2u_22_26 = {{4{1'b0}}, vector};
  end
  endfunction


  function automatic [23:0] conv_u2u_23_24 ;
    input [22:0]  vector ;
  begin
    conv_u2u_23_24 = {1'b0, vector};
  end
  endfunction


  function automatic [24:0] conv_u2u_23_25 ;
    input [22:0]  vector ;
  begin
    conv_u2u_23_25 = {{2{1'b0}}, vector};
  end
  endfunction


  function automatic [24:0] conv_u2u_24_25 ;
    input [23:0]  vector ;
  begin
    conv_u2u_24_25 = {1'b0, vector};
  end
  endfunction


  function automatic [25:0] conv_u2u_24_26 ;
    input [23:0]  vector ;
  begin
    conv_u2u_24_26 = {{2{1'b0}}, vector};
  end
  endfunction


  function automatic [26:0] conv_u2u_24_27 ;
    input [23:0]  vector ;
  begin
    conv_u2u_24_27 = {{3{1'b0}}, vector};
  end
  endfunction


  function automatic [25:0] conv_u2u_25_26 ;
    input [24:0]  vector ;
  begin
    conv_u2u_25_26 = {1'b0, vector};
  end
  endfunction


  function automatic [26:0] conv_u2u_26_27 ;
    input [25:0]  vector ;
  begin
    conv_u2u_26_27 = {1'b0, vector};
  end
  endfunction


  function automatic [27:0] conv_u2u_27_28 ;
    input [26:0]  vector ;
  begin
    conv_u2u_27_28 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    excursions
// ------------------------------------------------------------------


module excursions (
  clk, rst_n, valid_rsc_dat, valid_triosy_lz, is_random_rsc_dat, is_random_triosy_lz,
      epsilon_rsc_dat, epsilon_triosy_lz
);
  input clk;
  input rst_n;
  output valid_rsc_dat;
  output valid_triosy_lz;
  output is_random_rsc_dat;
  output is_random_triosy_lz;
  input epsilon_rsc_dat;
  output epsilon_triosy_lz;



  // Interconnect Declarations for Component Instantiations 
  excursions_core excursions_core_inst (
      .clk(clk),
      .rst_n(rst_n),
      .valid_rsc_dat(valid_rsc_dat),
      .valid_triosy_lz(valid_triosy_lz),
      .is_random_rsc_dat(is_random_rsc_dat),
      .is_random_triosy_lz(is_random_triosy_lz),
      .epsilon_rsc_dat(epsilon_rsc_dat),
      .epsilon_triosy_lz(epsilon_triosy_lz)
    );
endmodule




