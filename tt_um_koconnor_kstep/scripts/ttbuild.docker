# This is a dockerfile for installing and running the tinytapeout build.
#
# Build this docker container with something like:
#  docker build -t tt06 -f ttbuild.docker

FROM ubuntu:22.04

# Packages needed
RUN apt-get update && apt-get install -y --no-install-recommends \
    git ca-certificates python3 python3-venv python3-dev build-essential \
    libcairo-dev \
    curl \
# verilog test environment
    iverilog verilator \
# needed for normal init environment
    dumb-init \
# cleanup apt-list
    && rm -rf /var/lib/apt/lists/*

# Set up environment variables
ENV OPENLANE2_ROOT=/ttsetup/openlane2
ENV PDK_ROOT=/ttsetup/pdk
ENV PDK=sky130A

# Clone tt-support-tools
RUN mkdir -p /ttsetup \
    && git clone -b tt06 https://github.com/TinyTapeout/tt-support-tools /ttsetup/tt

# Install nix (with openlane cache enabled)
RUN echo "experimental-features = nix-command flakes\nextra-substituters = https://openlane.cachix.org\nextra-trusted-public-keys = openlane.cachix.org-1:qqdwh+QMNGmZAuyeQJTH9ErW57OWSvdtuwfBKdS254E=\n" > /ttsetup/nix-conf \
    && curl -L https://nixos.org/nix/install \
        | sh -s -- --daemon --yes --nix-extra-conf-file /ttsetup/nix-conf \
    && rm -f /ttsetup/nix-conf

# Install OpenLane2
RUN git clone https://github.com/efabless/openlane2 ${OPENLANE2_ROOT} \
    && bash -ic 'nix-shell --pure ${OPENLANE2_ROOT}/shell.nix --command "openlane --smoke-test"'

# Install OpenLane2 dependencies for openroad and klayout
RUN bash -ic 'nix-shell ${OPENLANE2_ROOT}/shell.nix \
    --command "openlane --flow openinopenroad"' || /bin/true
RUN bash -ic 'nix-shell ${OPENLANE2_ROOT}/shell.nix \
    --command "openlane --flow openinklayout"' || /bin/true

# Python and Pip Dependencies
RUN python3 -m venv /ttsetup/venv \
    # tinytapeout requirements
    && /ttsetup/venv/bin/pip install -r /ttsetup/tt/requirements.txt \
    # tinytapeout cocotb testing requirements
    && /ttsetup/venv/bin/pip install cocotb==1.8.1 pytest==8.1.1 \
        cocotbext-spi==0.4.0

# Use dumb-init as an entry point (for proper Unix signal handling)
ENTRYPOINT ["/usr/bin/dumb-init", "--"]
